[Start Command]
Q: What happens when I use the /start command?
A: When you use the /start command, I will:
   1. Welcome you to the GroveMentor AI Teacher System
   2. Provide a brief overview of the Grove Project
   3. Explain the key features and components of the system
   4. Guide you on how to use the AI teacher effectively
   5. Suggest a starting point for your learning journey
   
   Would you like me to initiate the /start sequence now?

Q: How do I begin my learning journey with GroveMentor?
A: To begin your learning journey with GroveMentor, follow these steps:
   1. Use the /start command to get an overview of the system
   2. Review the available commands (/config, /load, /progress, /help)
   3. Use the /progress command to see your current position in the learning tree
   4. Ask questions about specific topics or use commands to navigate the system
   5. Use the /load command when you want to analyze specific code snippets
   
   Remember, you can always use the /help command if you need assistance with any of the features. Would you like me to explain any of these steps in more detail?
   
[Setup]
Q: How do I set up this project?
A: To set up this project, follow these steps:
   1. Ensure you have the following requirements installed:
      * Git
      * Node.js
      * Yarn

   2. Clone the repository:
      Run `git clone https://github.com/robbiedood/grove-os`
      
   3. Navigate to the project directory:
      Run `cd Grove`

   4. Install dependencies:
      Run `yarn install`

   5. Choose your setup path:
      - For development: Run `yarn dev`
      - For production: Run `yarn build` followed by `yarn serve`
      - For Docker: Follow the Docker setup instructions

   Would you like more information on development, production, or Docker setup?

Q: What are the requirements to set up this project?
A: The main requirements for this project are:
   * Git
   * Node.js
   * Yarn
   
   Make sure you have these installed before proceeding with any further setup steps.

Q: How do I clone the project repository?
A: To clone the project repository, follow these steps:
   1. Open your terminal or command prompt
   2. Navigate to the directory where you want to clone the project
   3. Run the following command:
      `git clone https://github.com/robbiedood/grove-os`
   4. Once cloning is complete, navigate into the project directory:
      `cd Grove`

   After cloning, you can proceed with installing dependencies and setting up the project for development or production.

[Development]
Q: How do I set up the project for development?
A: To set up the project for development, follow these steps:
   1. Run `yarn install` to install dependencies
   2. Run `yarn build:prebuild` to perform any necessary pre-build steps
   3. Run `yarn dev` to start the development server

[Production]
Q: How do I build and run the project for production?
A: To build and run the project for production:
   1. Run `yarn install` to install dependencies
   2. Run `yarn build` to create a production build
   3. Run `yarn serve` to start the production server

[Docker]
Q: How can I run this project using Docker?
A: To run the project using Docker:
   1. Build the Docker image:
      `docker build -t daedalos .`
   2. Run the Docker container:
      `docker run -dp 3000:3000 --rm --name daedalos daedalos`

[Troubleshooting]
Q: I'm getting a "digital envelope routines::unsupported" error during `yarn install`. How can I fix this?
A: This error is related to OpenSSL. To fix it, you need to set the NODE_OPTIONS environment variable. Here's how:

   1. In Dockerfile:
      Add this line: `ENV NODE_OPTIONS=--openssl-legacy-provider`

   2. In .github/workflows/main.yml:
      Add this to your run commands: `NODE_OPTIONS='--openssl-legacy-provider' yarn`

   3. In your local environment:
      - On Unix-like systems (Linux, macOS, Git bash):
        `export NODE_OPTIONS=--openssl-legacy-provider`
      - On Windows command prompt:
        `set NODE_OPTIONS=--openssl-legacy-provider`
      - On PowerShell:
        `$env:NODE_OPTIONS = "--openssl-legacy-provider"`

   After setting this option, try running `yarn install` again.


